s = rand(50,50);  % create a random matrix
number_centroid = 3;     % intilize number of cwntroid
for m=1:number_centroid
 intcent(m)=rand(1,1);            %calculate random centroid
end
 
tarun_zero=zeros(50,50);
[r,c]=size(s);  %calculate the size of row and c
 
for m=1:number_centroid
new(m)=0;
end
 
for m=1:number_centroid
tarun(:,:,m)=tarun_zero;     % create zers matrix
 
end
 
 
for i=1:r
    for j=1:c
   for m=1:number_centroid
a(m)=intcent(m)-s(i,j); %update no of centroid 
ab(m)=abs(a(m)); % create absolute value
       
   % calculate minimum value centroid 
 end
    
 
[mini, ind]= min(ab);  % calculate minimum and index position
 
 
          tarun(i,j, ind)= s(i,j);
          new(ind) =  new(ind)+1;
       end
    end 
  
for m=1:number_centroid
 
n=0;
 for ir=1:r
     for jk=1:c
         
         n1= tarun(ir,jk,m);
         n=n1+n;
     end
 end
         old_centroids(m)=n/new(m);   
 
end  
 
 
tarun_zeros_new = zeros(50,50);
 
for m=1:number_centroid
    new_new(m)=0;
end
for m=1:number_centroid
    tarun_new(:,:,m) = tarun_zeros_new;
end
for iter=1:100
     disp(iter)
for ij=1:r
    for kl=1:c
        for m=1:number_centroid
  a_new(m)= old_centroids(m)-s(ij,kl);
  a_new1(m)=abs(a_new(m));
        end
  [mini, ind]= min(a_new1);  
            
        tarun_new(ir,kl,ind)= s(ij,kl);
        new_new(ind)=new_new(ind)+1;
    end
end
 
 
 
 for m=1:number_centroid 
 h=0;
  for irj=1:r
       for jkj=1:c
          nh=tarun_new(irj,jkj,m);
          h=nh+h;
      end
  end
          new_centroids(m)=h/new_new(m);
 end
 
  old_centroids=new_centroids;      
 
  end
